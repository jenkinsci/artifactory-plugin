package integration.pipelines.declarative

env.DONT_COLLECT='FOO'
env.COLLECT='BAR'
node("TestSlave") {
    def buildName = "declarative:dockerPush test"
    def buildNumber = "${BUILD_NUMBER}"
    def host = "${env.JENKINS_ARTIFACTORY_DOCKER_HOST}"
    def serverId = "Artifactory-1"
    def domainName = "${env.JENKINS_ARTIFACTORY_DOCKER_PUSH_DOMAIN}"
    if (!domainName.endsWith("/")) {
        domainName += "/"
    }
    def imageName = domainName + "jfrog_artifactory_jenkins_tests:2"
    def targetRepo = "${env.JENKINS_ARTIFACTORY_DOCKER_PUSH_REPO}"

    stage "Configure Artifactory"
    rtServer(
            id: serverId,
            url: "${env.JENKINS_PLATFORM_URL}".replaceFirst('/*$', '')+'/artifactory',
            username: "${env.JENKINS_PLATFORM_USERNAME}",
            password: "${env.JENKINS_PLATFORM_ADMIN_TOKEN}"
    )

    stage "Config Build Info"
    rtBuildInfo(
            buildName: buildName,
            buildNumber: buildNumber,
            captureEnv: true,
            excludeEnvPatterns: ["DONT_COLLECT"]
    )

    stage "Run docker push"
    rtDockerPush(
            serverId: serverId,
            image: imageName,
            buildName: buildName,
            buildNumber: buildNumber,
            host: host,
            targetRepo: targetRepo
    )


    stage "Publish build info"
    rtPublishBuildInfo(
            serverId: serverId,
            buildName: buildName,
            buildNumber: buildNumber,
    )
}
package integration.pipelines.declarative

import org.apache.commons.io.FileUtils

import java.nio.file.Paths

env.DONT_COLLECT='FOO'
env.COLLECT='BAR'
node("TestSlave") {
    def serverId = "Artifactory-1"
    def buildName = "declarative:npmCustomModuleName test"
    def buildNumber = "${BUILD_NUMBER}"

    stage "Configure Artifactory"
    rtServer(
            id: serverId,
            url: "${env.JENKINS_PLATFORM_URL}".replaceFirst('/*$', '')+'/artifactory',
            username: "${env.JENKINS_PLATFORM_USERNAME}",
            password: "${env.JENKINS_PLATFORM_ADMIN_TOKEN}"
    )

    stage "Configure npm build"
    rtNpmDeployer(
            id: "NPM_DEPLOYER",
            serverId: serverId,
            repo: "${NPM_LOCAL}",
    )

    rtNpmResolver(
            id: "NPM_RESOLVER",
            serverId: serverId,
            repo: "${NPM_REMOTE}",
    )

    stage "Copy project example"
    def npmProjectPath = Paths.get(pwd(), "declarative-npm-example").toFile()
    FileUtils.copyDirectory(Paths.get("${NPM_PROJECT_PATH}").toFile(), npmProjectPath)

    stage "Config Build Info"
    rtBuildInfo(
            buildName: buildName,
            buildNumber: buildNumber,
            captureEnv: true,
            excludeEnvPatterns: ["DONT_COLLECT"]
    )

    stage "Run npm install"
    rtNpmInstall(
            buildName: buildName,
            buildNumber: buildNumber,
            path: 'declarative-npm-example',
            resolverId: "NPM_RESOLVER",
            module: "my-npm-module",
            // Run install with -cache argument to download the artifacts from Artifactory
            // This done to be sure the artifacts exist in Artifactory
            args: "-cache="+npmProjectPath.toString()
    )

    stage "Run npm publish"
    rtNpmPublish(
            buildName: buildName,
            buildNumber: buildNumber,
            path: 'declarative-npm-example',
            deployerId: "NPM_DEPLOYER",
            module: "my-npm-module"
    )

    stage "Publish build info"
    rtPublishBuildInfo(
            serverId: serverId,
            buildName: buildName,
            buildNumber: buildNumber
    )
}

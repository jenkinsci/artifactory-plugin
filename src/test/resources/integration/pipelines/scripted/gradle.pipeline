package integration.pipelines.scripted

import org.apache.commons.io.FileUtils

import java.nio.file.Paths

env.DONT_COLLECT='FOO'
env.COLLECT='BAR'
node("TestSlave") {
    stage "Configure Artifactory"
    def rtServer = Artifactory.newServer url: "${env.JENKINS_PLATFORM_URL}".replaceFirst('/*$', '')+'/artifactory', username: "${env.JENKINS_PLATFORM_USERNAME}", password: "${env.JENKINS_PLATFORM_ADMIN_TOKEN}"
    def buildInfo = Artifactory.newBuildInfo()
    buildInfo.env.capture = true
    buildInfo.env.filter.addExclude("DONT_COLLECT")
    buildInfo.name = "scripted:gradle test"
    buildInfo.number = ${BUILD_NUMBER}

    stage "Configure Gradle build"
    def rtGradle = Artifactory.newGradleBuild()
    rtGradle.deployer repo: "${LOCAL_REPO1}", server: rtServer
    rtGradle.resolver repo: "${JCENTER_REMOTE_REPO}", server: rtServer
    rtGradle.usesPlugin = true
    rtGradle.useWrapper = true
    stage "Copy project example"
    FileUtils.copyDirectory(Paths.get("${GRADLE_PROJECT_PATH}").toFile(), Paths.get(pwd(), "scripted-gradle-example").toFile())

    stage "Run Gradle"
    rtGradle.run rootDir: "scripted-gradle-example", buildFile: "build.gradle", tasks: "clean artifactoryPublish", buildInfo: buildInfo

    stage "Publish build info"
    rtServer.publishBuildInfo buildInfo
}

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:f="/lib/form">
    <st:documentation>
        Binds a boolean field to two radio buttons that say Yes/No OK/Cancel Top/Bottom.

        <st:attribute name="field">
            Databinding field.
        </st:attribute>
        <st:attribute name="uniqueId">
            Form unique id
        </st:attribute>
        <st:attribute name="true">
            Text to be displayed for the 'true' value. Defaults to 'Yes'.
        </st:attribute>
        <st:attribute name="false">
            Text to be displayed for the 'false' value. Defaults to 'No'.
        </st:attribute>
        <st:attribute name="onclick">
            The function name to run onclick, the function will get the true/false value.
            for example to run myFunction("true") pass "myFunction" and click on true.
        </st:attribute>
    </st:documentation>
    <f:prepareDatabinding/>
    <j:set var="booleanValue" value="${instance[field] ?: 'true'}"/>  <!-- True if null -->
    <input type="radio" name="${field}" onclick="${onclick}('true', '${uniqueId}')"
           id="${field}_true-${uniqueId}"
           value="true" checked="${booleanValue ? 'true' : null}" style="margin-left: 20px; top: .0em"/>
    <label class="attach-previous" style="line-height: 2;">${attrs['true']?:'%Yes'}</label>
    <input type="radio" name="${field}" onclick="${onclick}('false', '${uniqueId}')"
           id="${field}_false-${uniqueId}"
           value="false" checked="${booleanValue ? null : 'true'}" style="margin-left: 20px; top: .0em"/>
    <label class="attach-previous" style="line-height: 2;">${attrs['false']?:'%No'}</label>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let deployPatternAreaLength = document.getElementById('deployPatternArea-${uniqueId}').getElementsByTagName('textarea')[0].value.length;
            let resolvePatternAreaLength = document.getElementById('resolvePatternArea-${uniqueId}').getElementsByTagName('textarea')[0].value.length;
            setSpecView('${instance[field]}', resolvePatternAreaLength, deployPatternAreaLength, '${uniqueId}');
        });
    </script>
</j:jelly>